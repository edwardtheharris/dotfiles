#!/bin/bash

# Bash completion script for kube-controller-manager v1.29

_kube_controller_manager_completion() {
    # shellcheck disable=SC2034
    local cur prev words cword
    _init_completion || return

    # Basic command-line options for kube-controller-manager v1.29
    # This list should be updated based on the actual options supported by v1.29
    local opts="--allocate-node-cidrs --authentication-kubeconfig --authorization-kubeconfig
    --bind-address --client-ca-file --cluster-cidr --cluster-name
    --cluster-signing-cert-file --cluster-signing-key-file --concurrent-deployment-syncs
    --concurrent-endpoint-syncs --concurrent-gc-syncs --concurrent-namespace-syncs
    --concurrent-replicaset-syncs --concurrent-service-syncs --concurrent-serviceaccount-token-syncs
    --concurrent_rc_syncs --config --controller-start-interval --controllers
    --enable-dynamic-provisioning --enable-garbage-collector --enable-hostpath-provisioner
    --experimental-cluster-signing-duration --feature-gates --flex-volume-plugin-dir
    --http2-max-streams-per-connection --kube-api-burst --kube-api-content-type
    --kube-api-qps --kubeconfig --leader-elect --leader-elect-lease-duration
    --leader-elect-renew-deadline --leader-elect-resource-lock --leader-elect-retry-period
    --log-flush-frequency --master --namespace-sync-period --pod-eviction-timeout
    --port --profiling --root-ca-file --secure-port --service-account-private-key-file
    --service-cluster-ip-range --terminated-pod-gc-threshold --tls-cert-file
    --tls-cipher-suites --tls-min-version --tls-private-key-file --tls-sni-cert-key
    --use-service-account-credentials --v --vmodule"

    if [[ ${cur} == -* ]]; then
        # shellcheck disable=SC2207,SC2086
        COMPREPLY=( $( compgen -W "${opts}" -- ${cur} ) )
        return 0
    fi
}

complete -F _kube_controller_manager_completion kube-controller-manager
