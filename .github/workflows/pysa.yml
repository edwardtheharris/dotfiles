###
# ```{rubric} PYSA
# ```
# ---
# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# This workflow integrates Python Static Analyzer (Pysa) with
# GitHub's Code Scanning feature.
#
# Python Static Analyzer (Pysa) is a security-focused static
# analysis tool that tracks flows of data from where they
# originate to where they terminate in a dangerous location.
#
# See [the docs](https://pyre-check.org/docs/pysa-basics/)
#
# ```{literalinclude} .github/workflows/pysa.yml
# :language: yaml
# :start-at: "name: Pysa\n"
# :end-before: "###\n"
# ```
name: Pysa
permissions:
    contents: read
on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '16 5 * * 5'
###
# ```{rubric} PYSA jobs
# ```
# ---
# Jobs for running PYSA.
#
# ```{literalinclude} .github/workflows/pysa.yml
# :language: yaml
# :start-at: "jobs:\n"
# ```
jobs:
  pysa:
    permissions:
      actions: read
      contents: read
      security-events: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
        with:
          submodules: true
      - name: Run Pysa
        uses: facebook/pysa-action@main
        with:
          ###
          # To customize these inputs:
          # See https://github.com/facebook/pysa-action#inputs
          repo-directory: './'
          requirements-path: 'Pipfile'
          infer-types: true
          include-default-sapp-filters: true
