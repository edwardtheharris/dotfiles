###
# ```{rubric} PyLint
# ```
# ---
# For most Python projects PyLint is sufficient for ensuring legible code of
# decent quality.
#
# ```{literalinclude} ./.github/workflows/pylint.yml
# :caption: .github/workflows/pylint.yml#name
# :language: yaml
# :start-at: "name: PyLint\n"
# :end-before: "###\n"
# ```
name: PyLint
permissions:
  contents: read
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
###
# ```{rubric} PyLint Jobs
# ```
# ---
# Define the jobs that run in the PyLint workflow. Might like to add some
# reporting to the PR on the results from these at some point.
#
# ```{literalinclude} ./.github/workflows/pylint.yml
# :caption: .github/workflows/pylint.yml#jobs
# :language: yaml
# :start-at: "jobs:\n"
# ```
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    steps:
    - uses: actions/checkout@main
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@main
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip pipenv
        pipenv requirements --dev > reqs
        pip3 install -r reqs
    - name: Analysing the code with pylint
      run: |
        pylint $(git ls-files '*.py')
  coverage:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@main
      - uses: actions/setup-python@main
        with:
          python-version: ${{ matrix.python-version }}
      - run: |
          python3 -m venv ansible/files/githooks/venv
          ansible/files/githooks/venv/bin/pip3 install -r ansible/files/githooks/reqs
      - run: |
          source ansible/files/githooks/venv/bin/activate
          git checkout -b test-branch
          git config user.username edwardtheharris
          git config user.email 'xandertheharris@gmail.com'
          git config user.name 'Xander Harris'
          command -v pytest
          pytest --cov=ansible/files/githooks/ --cov-report=xml
          mkdir .coverage-reports/
          cp -v coverage.xml .coverage-reports/coverage-$(git rev-parse --short=6 HEAD).xml
          cp -v coverage.xml ansible/files/githooks/
      - uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
